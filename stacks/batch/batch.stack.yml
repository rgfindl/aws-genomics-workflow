AWSTemplateFormatVersion: '2010-09-09'
Description: Batch Environment
Parameters:

  AppName:
    Type: String
    Description: App Name

  Environment:
    Type: String
    Description: Environment

  KeyPairName:
    Type: String
    Description: EC2 KeyPair

  ImageId:
    Type: String
    Description: EC2 Image Id
    Default: 'ami-fad25980'

  VPCStack:
    Type: String
    Description: VPC Stack Name

Resources:

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "batch.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref InstanceRole
      InstanceProfileName: !Ref InstanceRole

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub "${VPCStack}-VPCID"
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeEnvironmentName: !Sub "${AppName}-${Environment}"
      ServiceRole: !Ref BatchServiceRole
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        Ec2KeyPair: !Ref KeyPairName
        ImageId: !Ref ImageId
        InstanceRole: !Ref InstanceRole
        InstanceTypes:
          - optimal
        MinvCpus: 4
        DesiredvCpus: 4
        MaxvCpus: 4
        SecurityGroupIds:
          - !Ref EC2SecurityGroup
        Subnets:
          - Fn::ImportValue:
              !Sub "${VPCStack}-PrivateSubnet1AID"
          - Fn::ImportValue:
              !Sub "${VPCStack}-PrivateSubnet2AID"
        Type: EC2

  Queue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub "default-${Environment}"
      Priority: 100
      State: ENABLED
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment

Outputs:
  Queue:
    Value: !Ref Queue
    Export:
      Name: !Sub '${AWS::StackName}-Queue'
  ComputeEnvironment:
    Value: !Ref ComputeEnvironment
    Export:
      Name: !Sub '${AWS::StackName}-ComputeEnvironment'
  TaskRole:
    Value: !Ref TaskRole
    Export:
      Name: !Sub '${AWS::StackName}-TaskRole'