AWSTemplateFormatVersion: 2010-09-09
Description: Services Stack CI/CD - Boostrap

Parameters:
  GitHubOwner:
    Description: The name of the GitHub repository owner
    Type: String
  GitHubToken:
    Type: String
    Description: GitHub repository OAuth token
    NoEcho: true
  GitHubRepo:
    Type: String
    Description: GitHub repository name

  Environment:
    Type: String
    Description: Environment
    Default: dev
  AppName:
    Type: String
    Description: App Name
  KeyPairName:
    Type: String
    Description: EC2 KeyPair

Mappings:
  Branch:
    prod:
      BRANCH: 'master'
    dev:
      BRANCH: 'develop'

Resources:

  #
  # Bucket used by the pipelines to store artifacts.
  #
  PipelinesBucket:
    Description: The artifact bucket required for inter-stage data exchange
    Type: AWS::S3::Bucket

  #
  # IAM Role needed by the pipelines
  #
  CodePipelineRole:
    Description: The role CodePipeline will assume during pipeline execution
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole

  CodePipelinePolicy:
    Description: Policy for the CodePipeline Role
    DependsOn: CodePipelineRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-pipeline-policy"
      Roles:
        - !Ref CodePipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - '*'
            Resource:
              - '*'

  #
  # IAM Role needed by cloudformation
  #
  CloudFormationRole:
    Description: The role cloudformation will assume during pipeline execution
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
  CloudFormationPolicy:
    Description: Policy for the cloudformation execution Role
    DependsOn: CloudFormationRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${AWS::StackName}-cloudformation-policy"
      Roles:
        - !Ref CloudFormationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - '*'
            Resource:
              - '*'

  #
  # IAM role needed by our CodeBuild
  #
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Description: Policy for the codebuild execution
    DependsOn: CodeBuildRole
    Properties:
      PolicyName: !Sub "${AWS::StackName}-codebuild-policy"
      Roles:
        - !Ref CodeBuildRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - '*'
            Resource:
              - '*'

  #
  # Code Build project.
  # This Creates/Updates the VPC CloudFormation stack.
  # This is required over the normal CloudFormation CodePipeline step due to the large size of the VPC template. > 51200 bytes
  #
  VPCCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:6.3.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: StackName
            Value: !Sub "${AppName}-vpc-${Environment}"
          - Name: KeyPairName
            Value: !Ref KeyPairName
      Name: !Sub "${AppName}-vpc-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: stacks/vpc/buildspec.yml
      TimeoutInMinutes: 5 # must be between 5 minutes and 8 hours

  #
  # FusionCatcher CodeBuild
  #
  FusionCatcherCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:1.12.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/fusioncatcher/${Environment}"
          - Name: APP
            Value: !Sub "${AppName}-fusioncatcher-${Environment}"
          - Name: SRC_PATH
            Value: "src/batch/fusioncatcher"
      Name: !Sub "${AppName}-fusioncatcher-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/batch/buildspec.yml
      TimeoutInMinutes: 10 # must be between 5 minutes and 8 hours

  #
  # Rsem CodeBuild
  #
  RsemCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:1.12.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/rsem/${Environment}"
          - Name: APP
            Value: !Sub "${AppName}-rsem-${Environment}"
          - Name: SRC_PATH
            Value: "src/batch/rsem"
      Name: !Sub "${AppName}-rsem-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/batch/buildspec.yml
      TimeoutInMinutes: 10 # must be between 5 minutes and 8 hours

  #
  # Snpeff CodeBuild
  #
  SnpeffCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:1.12.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/snpeff/${Environment}"
          - Name: APP
            Value: !Sub "${AppName}-snpeff-${Environment}"
          - Name: SRC_PATH
            Value: "src/batch/snpeff"
      Name: !Sub "${AppName}-snpeff-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/batch/buildspec.yml
      TimeoutInMinutes: 10 # must be between 5 minutes and 8 hours

  #
  # Star CodeBuild
  #
  StarCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:1.12.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/star/${Environment}"
          - Name: APP
            Value: !Sub "${AppName}-star-${Environment}"
          - Name: SRC_PATH
            Value: "src/batch/star"
      Name: !Sub "${AppName}-star-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/batch/buildspec.yml
      TimeoutInMinutes: 10 # must be between 5 minutes and 8 hours

  #
  # Trimmomatic CodeBuild
  #
  TrimmomaticCodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildPolicy
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:1.12.1
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/trimmomatic/${Environment}"
          - Name: APP
            Value: !Sub "${AppName}-trimmomatic-${Environment}"
          - Name: SRC_PATH
            Value: "src/batch/trimmomatic"
      Name: !Sub "${AppName}-trimmomatic-${Environment}"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: src/batch/buildspec.yml
      TimeoutInMinutes: 10 # must be between 5 minutes and 8 hours

  #
  # Pipelines that create/update the cloudformation stacks within the project
  #
  Pipeline:
    Description: The pipeline that will generate other stacks
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - CodePipelinePolicy
      - CloudFormationPolicy
      - VPCCodeBuild
    Properties:
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelinesBucket
      Stages:
        - Name: Source
          Actions:
            - Name: CloneRepository
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: GitSource
              Configuration:
                Owner: !Ref GitHubOwner
                Branch: !FindInMap [Branch, !Ref 'Environment', BRANCH]
                Repo: !Ref GitHubRepo
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: VPC
          Actions:
            - Name: VPC
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref VPCCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: VPCSource
              RunOrder: 1
        - Name: Batch
          Actions:
            - Name: Batch
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/batch.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-batch-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "KeyPairName": "${KeyPairName}",
                    "VPCStack": "${AppName}-vpc-${Environment}"
                  }
              RunOrder: 1
        - Name: BatchJobImages
          Actions:
            - Name: FusionCatcherECR
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/ecr.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-fusioncatcher-ecr-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "RepositoryName": "${AppName}/fusioncatcher/${Environment}"
                  }
              RunOrder: 1
            - Name: FusionCatcherBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref FusionCatcherCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: FusionCatcherBuildOutput
              RunOrder: 2
            - Name: RsemECR
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/ecr.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-rsem-ecr-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "RepositoryName": "${AppName}/rsem/${Environment}"
                  }
              RunOrder: 1
            - Name: RsemBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref RsemCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: RsemBuildOutput
              RunOrder: 2
            - Name: SnpeffECR
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/ecr.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-snpeff-ecr-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "RepositoryName": "${AppName}/snpeff/${Environment}"
                  }
              RunOrder: 1
            - Name: SnpeffBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref SnpeffCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: SnpeffBuildOutput
              RunOrder: 2
            - Name: StarECR
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/ecr.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-star-ecr-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "RepositoryName": "${AppName}/star/${Environment}"
                  }
              RunOrder: 1
            - Name: StarBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref StarCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: StarBuildOutput
              RunOrder: 2
            - Name: TrimmomaticECR
              InputArtifacts:
                - Name: GitSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/ecr.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-trimmomatic-ecr-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "RepositoryName": "${AppName}/trimmomatic/${Environment}"
                  }
              RunOrder: 1
            - Name: TrimmomaticBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref TrimmomaticCodeBuild
              InputArtifacts:
                - Name: GitSource
              OutputArtifacts:
                - Name: TrimmomaticBuildOutput
              RunOrder: 2
        - Name: BatchJobs
          Actions:
            - Name: FusionCatcherJob
              InputArtifacts:
                - Name: GitSource
                - Name: FusionCatcherBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/job.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-fusioncatcher-job-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "JobName": "fusioncatcher",
                    "VPCStack": "${AppName}-vpc-${Environment}",
                    "BatchStack": "${AppName}-batch-${Environment}",
                    "RepositoryUrl": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/fusioncatcher/${Environment}",
                    "BuildVersion" : { "Fn::GetParam" : ["FusionCatcherBuildOutput", "version.json", "version"]}
                  }
              RunOrder: 1
            - Name: RsemJob
              InputArtifacts:
                - Name: GitSource
                - Name: RsemBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/job.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-rsem-job-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "JobName": "rsem",
                    "VPCStack": "${AppName}-vpc-${Environment}",
                    "BatchStack": "${AppName}-batch-${Environment}",
                    "RepositoryUrl": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/rsem/${Environment}",
                    "BuildVersion" : { "Fn::GetParam" : ["RsemBuildOutput", "version.json", "version"]}
                  }
              RunOrder: 1
            - Name: SnpeffJob
              InputArtifacts:
                - Name: GitSource
                - Name: SnpeffBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/job.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-snpeff-job-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "JobName": "snpeff",
                    "VPCStack": "${AppName}-vpc-${Environment}",
                    "BatchStack": "${AppName}-batch-${Environment}",
                    "RepositoryUrl": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/snpeff/${Environment}",
                    "BuildVersion" : { "Fn::GetParam" : ["SnpeffBuildOutput", "version.json", "version"]}
                  }
              RunOrder: 1
            - Name: StarJob
              InputArtifacts:
                - Name: GitSource
                - Name: StarBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/job.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-star-job-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "JobName": "star",
                    "VPCStack": "${AppName}-vpc-${Environment}",
                    "BatchStack": "${AppName}-batch-${Environment}",
                    "RepositoryUrl": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/star/${Environment}",
                    "BuildVersion" : { "Fn::GetParam" : ["StarBuildOutput", "version.json", "version"]}
                  }
              RunOrder: 1
            - Name: TrimmomaticJob
              InputArtifacts:
                - Name: GitSource
                - Name: TrimmomaticBuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: "GitSource::stacks/batch/job.stack.yml"
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub "${AppName}-trimmomatic-job-${Environment}"
                ParameterOverrides: !Sub |
                  {
                    "AppName": "${AppName}",
                    "Environment": "${Environment}",
                    "JobName": "trimmomatic",
                    "VPCStack": "${AppName}-vpc-${Environment}",
                    "BatchStack": "${AppName}-batch-${Environment}",
                    "RepositoryUrl": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${AppName}/trimmomatic/${Environment}",
                    "BuildVersion" : { "Fn::GetParam" : ["TrimmomaticBuildOutput", "version.json", "version"]}
                  }
              RunOrder: 1